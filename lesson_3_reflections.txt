When would you want to use a remote repository rather than keeping all your work
local?

A remote repository provides an additional back-up location
Using multiple computers (e.g. many workers on a project or a specialized resource is required)
will benefit from a central storage location


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Anytime someone commits a change and pushes it to the remote, it would then have to reconcile
the changes with all the local repositories, and this may be while people are working on things,
potentially breaking them.


Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Forks are a type of clone: it clones from one gitHub account to another.
Clone copies the branch on a local machine or between a local and remote.
A branch is where the project changes with new features or experimental things that aren't
ready for the world to use


What is the benefit of having a copy of the last known state of the remote
stored locally?

So I can manually merge conflicts locally without corrupting the entire origin/master branch



How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

 By using something like dropbox and having everyone make a local copy then merging into the
 online master when a change is complete.  This would suck, because then each person would
 have to keep downloading the new stuffs to make sure their working copy is up to date.
 Also, this would have only manual merging.


When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

Allows experimentation and feature implementation without risking breaking the master
branch (the live version doesn't change).
